[{"path":[]},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement yurifeng@bu.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to twitterAnalysis","title":"Contributing to twitterAnalysis","text":"outlines propose change twitterAnalysis. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to twitterAnalysis","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to twitterAnalysis","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to twitterAnalysis","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"UBC-MDS/twitterAnalysis\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to twitterAnalysis","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to twitterAnalysis","text":"Please note twitterAnalysis project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 twitterAnalysis authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/articles/twitterAnalysis.html","id":"load-twitteranalsis-package","dir":"Articles","previous_headings":"","what":"Load twitterAnalsis package","title":"twitterAnalysis","text":"","code":"library(twitterAnalysis) #> Loading required package: dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #> Loading required package: stopwords #> Loading required package: tm #> Loading required package: NLP #>  #> Attaching package: 'tm' #> The following object is masked from 'package:stopwords': #>  #>     stopwords #> Loading required package: wordcloud #> Loading required package: RColorBrewer #> Loading required package: twitteR #>  #> Attaching package: 'twitteR' #> The following objects are masked from 'package:dplyr': #>  #>     id, location #> Loading required package: syuzhet"},{"path":"https://ubc-mds.github.io/twitterAnalysis/articles/twitterAnalysis.html","id":"obtain-twitter-api-credentials","dir":"Articles","previous_headings":"","what":"Obtain Twitter API credentials","title":"twitterAnalysis","text":"https://developer.twitter.com/ obtain API access credentials.","code":"consumer_key <- 'xxx' consumer_secret <- 'xxx' access_token <- 'xxx' token_secret <- 'xxx'"},{"path":"https://ubc-mds.github.io/twitterAnalysis/articles/twitterAnalysis.html","id":"quick-use-example","dir":"Articles","previous_headings":"","what":"Quick use example","title":"twitterAnalysis","text":"functions package meant used tandem . Step 1: Setup Twitter API credentials Step 2: get 30 recent tweets user (example, @elonmusk) Step 3: Preform pre-processing Step 4: Preform Sentiment Analysis Step 5: Generate WordCloud  Optional: can also determine proportion neutral, positive, netaive tweets count_tweets().","code":"api_user <- user_info(consumer_key, consumer_secret, access_token, token_secret) elon_df <- load_twitter_by_user('elonmusk', 100, api_user) #> [1] \"Using direct authentication\" head(elon_df) #>   screenName                  id             created favoriteCount retweetCount #> 1   elonmusk 1621719831249567744 2023-02-04 03:58:32          3158          149 #> 2   elonmusk 1621719712429129728 2023-02-04 03:58:04          9101          256 #> 3   elonmusk 1621689064293339136 2023-02-04 01:56:17         14074          527 #> 4   elonmusk 1621655873641930752 2023-02-03 23:44:23          1674           96 #> 5   elonmusk 1621654211908997121 2023-02-03 23:37:47         23045         1221 #> 6   elonmusk 1621653950947799042 2023-02-03 23:36:45        148306        11252 #>                                                                                                                                             text #> 1                                                                                                                                        @tobi ! #> 2                                                                                                                                 @TrungTPhan 🤣 #> 3                                                                                                                              @TheBabylonBee 🤣 #> 4                                                                                                                   @ErikaAwakening You’re right #> 5                                                                                                             @Tesla Manufactured in California! #> 6 Thank goodness, the wisdom of the people has prevailed!\\n\\nI am deeply appreciative of the jury’s unanimous finding o… https://t.co/fegi6b41Md elon_clean_df <- generalPreprocessing(elon_df) head(elon_clean_df) #>   screenName                  id             created favoriteCount retweetCount #> 1   elonmusk 1621719831249567744 2023-02-04 03:58:32          3158          149 #> 2   elonmusk 1621719712429129728 2023-02-04 03:58:04          9101          256 #> 3   elonmusk 1621689064293339136 2023-02-04 01:56:17         14074          527 #> 4   elonmusk 1621655873641930752 2023-02-03 23:44:23          1674           96 #> 5   elonmusk 1621654211908997121 2023-02-03 23:37:47         23045         1221 #> 6   elonmusk 1621653950947799042 2023-02-03 23:36:45        148306        11252 #>                                                                                                                                             text #> 1                                                                                                                                        @tobi ! #> 2                                                                                                                                 @TrungTPhan 🤣 #> 3                                                                                                                              @TheBabylonBee 🤣 #> 4                                                                                                                   @ErikaAwakening You’re right #> 5                                                                                                             @Tesla Manufactured in California! #> 6 Thank goodness, the wisdom of the people has prevailed!\\n\\nI am deeply appreciative of the jury’s unanimous finding o… https://t.co/fegi6b41Md #>                                                                                                                text_clean #> 1                                                                                                                       ! #> 2                                                                                                                      🤣 #> 3                                                                                                                      🤣 #> 4                                                                                                            You’re right #> 5                                                                                             Manufactured in California! #> 6 Thank goodness, the wisdom of the people has prevailed!\\n\\nI am deeply appreciative of the jury’s unanimous finding o… elon_sentiment_df <- sentiment_labeler(elon_clean_df, 'text') #> Warning: `spread_()` was deprecated in tidyr 1.2.0. #> ℹ Please use `spread()` instead. #> ℹ The deprecated feature was likely used in the syuzhet package. #>   Please report the issue to the authors. head(elon_sentiment_df) #>   screenName                  id             created favoriteCount retweetCount #> 1   elonmusk 1621719831249567744 2023-02-04 03:58:32          3158          149 #> 2   elonmusk 1621719712429129728 2023-02-04 03:58:04          9101          256 #> 3   elonmusk 1621689064293339136 2023-02-04 01:56:17         14074          527 #> 4   elonmusk 1621655873641930752 2023-02-03 23:44:23          1674           96 #> 5   elonmusk 1621654211908997121 2023-02-03 23:37:47         23045         1221 #> 6   elonmusk 1621653950947799042 2023-02-03 23:36:45        148306        11252 #>                                                                                                                                             text #> 1                                                                                                                                        @tobi ! #> 2                                                                                                                                 @TrungTPhan 🤣 #> 3                                                                                                                              @TheBabylonBee 🤣 #> 4                                                                                                                   @ErikaAwakening You’re right #> 5                                                                                                             @Tesla Manufactured in California! #> 6 Thank goodness, the wisdom of the people has prevailed!\\n\\nI am deeply appreciative of the jury’s unanimous finding o… https://t.co/fegi6b41Md #>                                                                                                                text_clean #> 1                                                                                                                       ! #> 2                                                                                                                      🤣 #> 3                                                                                                                      🤣 #> 4                                                                                                            You’re right #> 5                                                                                             Manufactured in California! #> 6 Thank goodness, the wisdom of the people has prevailed!\\n\\nI am deeply appreciative of the jury’s unanimous finding o…  #>   sentiment #> 1   neutral #> 2   neutral #> 3   neutral #> 4   neutral #> 5   neutral #> 6  positive elon_plt_clean_df <- clean_tweets(elon_sentiment_df) elon_count_df <- count_words(elon_plt_clean_df) plt <- create_wordcloud(elon_count_df) count_tweets(elon_sentiment_df) #> $negative #> [1] 0.1041667 #>  #> $neutral #> [1] 0.65625 #>  #> $positive #> [1] 0.2395833"},{"path":"https://ubc-mds.github.io/twitterAnalysis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andy Wang. Author, maintainer. Yurui Feng. Author. Roan Raina. Author. Renzo Wijingaarden. Author.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang , Feng Y, Raina R, Wijingaarden R (2023). twitterAnalysis: Assess twitter user's character based recent tweets. https://github.com/UBC-MDS/twitterAnalysis, https://ubc-mds.github.io/twitterAnalysis/.","code":"@Manual{,   title = {twitterAnalysis: Assess a twitter user's character based on their recent tweets},   author = {Andy Wang and Yurui Feng and Roan Raina and Renzo Wijingaarden},   year = {2023},   note = {https://github.com/UBC-MDS/twitterAnalysis, https://ubc-mds.github.io/twitterAnalysis/}, }"},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"twitteranalysis","dir":"","previous_headings":"","what":"Assess a twitter user's character based on their recent tweets","title":"Assess a twitter user's character based on their recent tweets","text":"goal twitterAnalysis assess twitter user’s character based recent tweets","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Assess a twitter user's character based on their recent tweets","text":"Twitter popular social media app 1 billion user accounts. diversity users strength, individuals concerns prevalence “troll” accounts individuals exhibit unconstructive tone diction deem worth engaging . package twitterAnalysis intended provide insight twitter user based tweet history effort determine account worth engaging . package provides easy use interface determining general sentiment expressed user.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Assess a twitter user's character based on their recent tweets","text":"can install development version twitterAnalysis GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"UBC-MDS/twitterAnalysis\")"},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Assess a twitter user's character based on their recent tweets","text":"example analysis using 300 recent tweets user","code":"library(twitterAnalysis)  #retrieve 300 tweets from @elonmusk tokens <- user_info(\"YOUR_consumer_key\",                      \"YOUR_consumer_secret\",                      \"YOUR_access_token\",                      \"YOUR_access_token_secret\") elon_tweets <- load_twitter_by_user(\"elonmusk\", 300, tokens)  #clean up tweets cleaned_tweets <- generalPreprocessing(elon_tweets)  #label sentiment labeled_tweets <- sentiment_labeler(cleaned_tweets, \"text_clean\")  #count frequency of each sentiment sentiment_freq <- count_tweets(labeled_tweets)  #generate wordcloud cleaned_tweets |>    clean_tweets() |>    count_words() |>    create_wordcloud()"},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"Assess a twitter user's character based on their recent tweets","text":"load_twitter : Returns user’s recent tweets (dataframe) given user id using Twitter API. generalPreprocessing : Cleans recent tweet dataframe generated load_twitter. Includes features removing punctuation extracting emojis. sentiment_labeler : Determines general (average) sentiment recent tweets. count_tweets: Return proportion three sentiments. create_wordcloud : Generates word cloud frequently used words tweets.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"scope-and-fit","dir":"","previous_headings":"","what":"Scope and Fit","title":"Assess a twitter user's character based on their recent tweets","text":"existing R packages preform tweet analysis preprocessing (including textprepr tweetr). However, none packages focus providing metrics context determining twitter user worth engaging .","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Assess a twitter user's character based on their recent tweets","text":"Interested contributing? Check contributing guidelines CONTRIBUTING.md. Please note project released Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Assess a twitter user's character based on their recent tweets","text":"twitterAnalysis created Andy Wang, Renzo Wijngaarden, Roan Raina, Yurui Feng. licensed terms MIT license.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/clean_tweets.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a clean corpus of all the used words in a users tweets. — clean_tweets","title":"Create a clean corpus of all the used words in a users tweets. — clean_tweets","text":"Create clean corpus used words users tweets.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/clean_tweets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a clean corpus of all the used words in a users tweets. — clean_tweets","text":"","code":"clean_tweets(df)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/clean_tweets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a clean corpus of all the used words in a users tweets. — clean_tweets","text":"df dataframe containing users tweets preprocessed.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/clean_tweets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a clean corpus of all the used words in a users tweets. — clean_tweets","text":"VCorpus words used disregarding stopwords punctuation.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/clean_tweets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a clean corpus of all the used words in a users tweets. — clean_tweets","text":"","code":"if (FALSE) {   docs <- clean_tweets(df) }"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_tweets.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the propotion of different sentiment tweets in a labelled sentiment dataframe — count_tweets","title":"Count the propotion of different sentiment tweets in a labelled sentiment dataframe — count_tweets","text":"Count propotion different sentiment tweets labelled sentiment dataframe","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_tweets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the propotion of different sentiment tweets in a labelled sentiment dataframe — count_tweets","text":"","code":"count_tweets(df, proportion = TRUE)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_tweets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the propotion of different sentiment tweets in a labelled sentiment dataframe — count_tweets","text":"df dataframe pre-processing proportion boolean value True: returns proportion; otherwise, return counts","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_tweets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the propotion of different sentiment tweets in a labelled sentiment dataframe — count_tweets","text":"list calculates proportion three sentiments tweets","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_tweets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the propotion of different sentiment tweets in a labelled sentiment dataframe — count_tweets","text":"","code":"df <- data.frame(User = c(\"Youri\"), text = c(\"Hi, how are you!\")) labelled_df <- sentiment_labeler(df, \"text\") #> Warning: `spread_()` was deprecated in tidyr 1.2.0. #> ℹ Please use `spread()` instead. #> ℹ The deprecated feature was likely used in the syuzhet package. #>   Please report the issue to the authors. count_list <- count_tweets(labelled_df)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataframe with all the words in a users tweets and how often they appear. — count_words","title":"Create a dataframe with all the words in a users tweets and how often they appear. — count_words","text":"Create dataframe words users tweets often appear.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataframe with all the words in a users tweets and how often they appear. — count_words","text":"","code":"count_words(docs)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_words.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataframe with all the words in a users tweets and how often they appear. — count_words","text":"docs VCorpus words used users tweets.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_words.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataframe with all the words in a users tweets and how often they appear. — count_words","text":"dataframe words tweets often appear.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/count_words.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataframe with all the words in a users tweets and how often they appear. — count_words","text":"","code":"if (FALSE) {   df2 <- count_words(docs) }"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/create_wordcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a wordcloud of a users tweets. — create_wordcloud","title":"Create a wordcloud of a users tweets. — create_wordcloud","text":"Create wordcloud users tweets.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/create_wordcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a wordcloud of a users tweets. — create_wordcloud","text":"","code":"create_wordcloud(df)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/create_wordcloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a wordcloud of a users tweets. — create_wordcloud","text":"df dataframe words tweets often appear.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/create_wordcloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a wordcloud of a users tweets. — create_wordcloud","text":"wordcloud users tweets.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/create_wordcloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a wordcloud of a users tweets. — create_wordcloud","text":"","code":"if (FALSE) {   create_wordcloud(df2) }"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/generalPreprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform general preprocessing on df. Removes retweets/favourites and cleans URLs, Mentions, and Numbers. — generalPreprocessing","title":"Perform general preprocessing on df. Removes retweets/favourites and cleans URLs, Mentions, and Numbers. — generalPreprocessing","text":"Perform general preprocessing df. Removes retweets/favourites cleans URLs, Mentions, Numbers.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/generalPreprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform general preprocessing on df. Removes retweets/favourites and cleans URLs, Mentions, and Numbers. — generalPreprocessing","text":"","code":"generalPreprocessing(df)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/generalPreprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform general preprocessing on df. Removes retweets/favourites and cleans URLs, Mentions, and Numbers. — generalPreprocessing","text":"df dataframe storing raw data text column","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/generalPreprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform general preprocessing on df. Removes retweets/favourites and cleans URLs, Mentions, and Numbers. — generalPreprocessing","text":"processed tweet dataframe.","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/generalPreprocessing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform general preprocessing on df. Removes retweets/favourites and cleans URLs, Mentions, and Numbers. — generalPreprocessing","text":"","code":"df <- data.frame(User = c(\"James\"), text = c(\"Hi, how are you!\")) x <- generalPreprocessing(df)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_keywords.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dataframe which contains specific keyword return as a dataframe with total tweets — load_twitter_by_keywords","title":"Load dataframe which contains specific keyword return as a dataframe with total tweets — load_twitter_by_keywords","text":"Load dataframe contains specific keyword return dataframe total tweets","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_keywords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dataframe which contains specific keyword return as a dataframe with total tweets — load_twitter_by_keywords","text":"","code":"load_twitter_by_keywords(keywords, limit, user_info)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_keywords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dataframe which contains specific keyword return as a dataframe with total tweets — load_twitter_by_keywords","text":"keywords str contains keywords limit integer shows many tweets user want return user_info list contains user info","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_keywords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dataframe which contains specific keyword return as a dataframe with total tweets — load_twitter_by_keywords","text":"dataframe","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_keywords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load dataframe which contains specific keyword return as a dataframe with total tweets — load_twitter_by_keywords","text":"","code":"if (FALSE) { x <- load_twitter_by_keywords('nice', 50, user_info) }"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dataframe which contains specific user and return as a dataframe with total tweets — load_twitter_by_user","title":"Load dataframe which contains specific user and return as a dataframe with total tweets — load_twitter_by_user","text":"Load dataframe contains specific user return dataframe total tweets","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dataframe which contains specific user and return as a dataframe with total tweets — load_twitter_by_user","text":"","code":"load_twitter_by_user(user_name, limit, user_info)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dataframe which contains specific user and return as a dataframe with total tweets — load_twitter_by_user","text":"user_name str contains tweets specific user limit integer shows many tweets user want return user_info list contains user info","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dataframe which contains specific user and return as a dataframe with total tweets — load_twitter_by_user","text":"dataframe contains tweets contains specific user tweets","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/load_twitter_by_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load dataframe which contains specific user and return as a dataframe with total tweets — load_twitter_by_user","text":"","code":"if (FALSE) { x <- load_twitter_by_user('Cristiano', 100, user1) }"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/sentiment_labeler.html","id":null,"dir":"Reference","previous_headings":"","what":"Labelling each row in a given column of tweets/text with positive, negative or neutral sentiment — sentiment_labeler","title":"Labelling each row in a given column of tweets/text with positive, negative or neutral sentiment — sentiment_labeler","text":"Labelling row given column tweets/text positive, negative neutral sentiment","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/sentiment_labeler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labelling each row in a given column of tweets/text with positive, negative or neutral sentiment — sentiment_labeler","text":"","code":"sentiment_labeler(df, col)"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/sentiment_labeler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labelling each row in a given column of tweets/text with positive, negative or neutral sentiment — sentiment_labeler","text":"df dataframe pre-processing col Column name tweets dataset","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/sentiment_labeler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labelling each row in a given column of tweets/text with positive, negative or neutral sentiment — sentiment_labeler","text":"dataframe contains tweets corresponding labels","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/sentiment_labeler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labelling each row in a given column of tweets/text with positive, negative or neutral sentiment — sentiment_labeler","text":"","code":"df <- data.frame(User = c(\"Youri\"), text = c(\"Hi, how are you!\")) labelled_df <- sentiment_labeler(df, \"text\")"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/user_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Title Take four input parameters and stored in a list object\nnamed ","title":"Title Take four input parameters and stored in a list object\nnamed ","text":"Title Take four input parameters stored list object named \"user_info\" keys \"consumer_key\", \"consumer_secret\", \"access_token\", \"access_token_secret\".","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/user_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title Take four input parameters and stored in a list object\nnamed ","text":"","code":"user_info(   consumer_key_input,   consumer_secret_input,   access_token_input,   access_token_secret_input )"},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/user_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title Take four input parameters and stored in a list object\nnamed ","text":"consumer_key_input twitter consumer key consumer_secret_input twitter consumer secret access_token_input twitter token access_token_secret_input twitter token secret","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/user_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title Take four input parameters and stored in a list object\nnamed ","text":"list contains user info","code":""},{"path":"https://ubc-mds.github.io/twitterAnalysis/reference/user_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title Take four input parameters and stored in a list object\nnamed ","text":"","code":"if (FALSE) { user_info(consumer_key_input, consumer_secret_input, access_token_input, access_token_secret_input) }"}]
